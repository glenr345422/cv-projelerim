import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 1. Read Amazon Sales Data
file_path = "amazon_sales_data.csv"  # Path to the Amazon sales data CSV file
try:
    sales_data = pd.read_csv(file_path)
except FileNotFoundError:
    print(f"Error: {file_path} not found. Please check the file name or path.")
    exit()

# 2. Calculate Total Revenue and Profit
sales_data["Total Sales"] = sales_data["Price"] * sales_data["Quantity"]
sales_data["Profit"] = (sales_data["Price"] - sales_data["Cost Price"]) * sales_data["Quantity"]
total_revenue = sales_data["Total Sales"].sum()
total_profit = sales_data["Profit"].sum()
print(f"Total Revenue: ${total_revenue:.2f}")
print(f"Total Profit: ${total_profit:.2f}")

# 3. Top Selling Products
top_products = sales_data.groupby("Product")["Quantity"].sum().sort_values(ascending=False)
print("\nTop Selling Products:")
print(top_products)

# 4. Revenue by Country
country_sales = sales_data.groupby("Country")["Total Sales"].sum().sort_values(ascending=False)
print("\nRevenue by Country:")
print(country_sales)

# 5. Time-Based Analysis (Monthly Sales)
sales_data["Date"] = pd.to_datetime(sales_data["Date"])
sales_data["Month"] = sales_data["Date"].dt.to_period("M")
monthly_sales = sales_data.groupby("Month")["Total Sales"].sum()
print("\nMonthly Revenue:")
print(monthly_sales)

# 6. Returned Products Analysis
if "Return Status" in sales_data.columns:
    returned_products = sales_data[sales_data["Return Status"] == "Returned"].groupby("Product")["Quantity"].sum()
    print("\nMost Returned Products:")
    print(returned_products)

# 7. Visualizations
# a) Top Selling Products Plot
plt.figure(figsize=(10, 6))
top_products.head(10).plot(kind="bar", color="skyblue")
plt.title("Top Selling Products (Top 10)", fontsize=16)
plt.xlabel("Product", fontsize=12)
plt.ylabel("Quantity Sold", fontsize=12)
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig("amazon_top_products.png")
plt.show()

# b) Revenue by Country Plot
plt.figure(figsize=(10, 6))
country_sales.head(10).plot(kind="bar", color="orange")
plt.title("Revenue by Country (Top 10)", fontsize=16)
plt.xlabel("Country", fontsize=12)
plt.ylabel("Total Revenue", fontsize=12)
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig("amazon_country_revenue.png")
plt.show()

# c) Monthly Revenue Trend
plt.figure(figsize=(10, 6))
monthly_sales.plot(kind="line", marker="o", color="green")
plt.title("Monthly Revenue", fontsize=16)
plt.xlabel("Month", fontsize=12)
plt.ylabel("Total Revenue", fontsize=12)
plt.grid(True)
plt.tight_layout()
plt.savefig("amazon_monthly_revenue.png")
plt.show()

# d) Revenue by Category Analysis
category_revenue = sales_data.groupby("Category")["Total Sales"].sum()
plt.figure(figsize=(8, 5))
category_revenue.plot(kind="pie", autopct="%1.1f%%", startangle=140, colors=["gold", "lightblue", "lightgreen", "pink", "cyan"])
plt.title("Revenue by Category", fontsize=14)
plt.ylabel("")  # Hide Y-axis
plt.savefig("amazon_category_revenue.png")
plt.show()

# e) Heatmap for Country and Category Revenue
heatmap_data = sales_data.pivot_table(values="Total Sales", index="Country", columns="Category", aggfunc="sum", fill_value=0)
plt.figure(figsize=(12, 8))
sns.heatmap(heatmap_data, annot=True, fmt=".0f", cmap="Blues")
plt.title("Revenue by Country and Category", fontsize=16)
plt.xlabel("Category", fontsize=12)
plt.ylabel("Country", fontsize=12)
plt.tight_layout()
plt.savefig("amazon_country_category_heatmap.png")
plt.show()
